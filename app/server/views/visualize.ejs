<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title> Data Raw</title>
    <!-- <meta http-equiv="refresh" content="30"> -->
    <script src="js/js_page/jquery.min.js" type="text/javascript"></script>
    <link href="css/bootstrap.min.css" rel="stylesheet" type="text/css">
    <link href="css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link href="css/animate.css" rel="stylesheet" />
    <link href="css/style_home.css" rel="stylesheet">
    <link href="color/default.css" rel="stylesheet">
    <link href="css/bootstrap.min.css" rel="stylesheet" type="text/css">
    <link href="css/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <script src="js/views/canvasjs.min.js"></script>
    <script type="text/javascript" src="js/js_page/jquery-1.10.2.min.js"></script>
    <script type="text/javascript" src="/socket.io/socket.io.js"></script>
    <script src="js/js_page/jquery-1.12.4.js"></script>
    <script src="js/js_page/jquery-ui.js"></script>
    <script src="js/js_page/jquery.min.js"></script>
    <script src="js/js_page/bootstrap.min.js"></script>
    <script src="js/socket/rssi.js"></script>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: auto;
        width: auto;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      table {
          height: 50%;
          width: 100%;
        }
        th {
          height: auto;
          width: auto;
        }
    </style>
  </head>
  <body>
<section id="view1">
    <div class="collapse navbar-collapse navbar-right navbar-main-collapse">
       <ul class="nav navbar-nav" style="background-color:powderblue;">
          <li><a href="/homedata">Back Dashboard</a></li>
          <li><a href="#view1">Section 1</a></li>
          <li><a href="#view2">Section 2</a></li>
       </u>
      </div>
      <div>
      <h5 style="background-color: powderblue"><strong>Visualize Level Signal</strong></h5>
    </div>
    <table>
      <p> </p>
      <tr>
        <th style="width:500px;height:400px; border-style: groove;">
          <div>
            <p><center>Data Realtime</center></p>
          </div>
          <div>
            <ul id='ws' style="font-family: 'Courier New', Courier, monospace;"></ul>
        </div>
        <th style="width:400px;height:90%">
          <div class="center">
            <center>
              <div>
                <h4>Realtime RSSI with Node 1</h4>
              </div>
            <div id= "circle" style="text-align:center;">
                <p> -- </p>
              <h2 id="rssi"></h2>
            </div>
          </center>
          </div>
        </th>
        <th style="height:400px; width:400px">
        <div id="map" style="width:100%;height:400px"></div>
        </th>
      </tr>
</table>
<div>
  <p> <p>
</div>
<table>
  <th>
    <div id="chartContainer1" style="height: 300px; width: 100%; border-style: groove;"></div>
  </th>
</table>
</section>
<section id="view2">
  <div class="row">
    <div class="col-lg-2 col-lg-offset-5">
      <hr class="marginbot-50">
    </div>
  </div>
  <h1> <center>Chart Views</center></h1>
<table>
  <tr>
    <th><div id="chartContainer2"  style="height: 200px; width: 100%; border-style: groove;"> </div></th>
    <th><div id="chartContainer3"  style="height: 200px; width: 100%; border-style: groove;"> </div></th>
    <th><div id="chartContainer4" style="height: 200px; width: 100%; border-style: groove;"> </div></th>
  </tr>
  <tr>
    <td><div id="chartContainer5"  style="height: 200px; width: 100%; border-style: groove;"> </div></td>
    <td><div id="chartContainer6"  style="height: 200px; width: 100%; border-style: groove;"> </div></td>
    <td><div id="chartContainer7"  style="height: 200px; width: 100%; border-style: groove;"> </div></td>
  </tr>
</section>
<section>
    <div class="row">
      <div class="col-lg-2 col-lg-offset-5">
        <hr class="marginbot-50">
      </div>
    </div>
    <table>
      <tr>
        <td><div id="chartContainer8"  style="height: 200px; width: 100%; border-style: groove;"> </div></td>
        <td><div id="chartContainer9"  style="height: 200px; width: 100%; border-style: groove;"> </div></td>
        <td><div id="chartContainer10"  style="height: 200px; width: 100%; border-style: groove;"> </div></td>
      </tr>
    </table>
</table>
</section>
<div id="rssi"> </div>
<script type="text/javascript">
var checkedValue;
var data = [];
setInterval(function(){ checkedValue = document.getElementById("rssi").value; }, 30);
console.log('rssi');
window.onload = function () {
var chart1 = new CanvasJS.Chart("chartContainer1", {
  theme:"dark2",
  animationEnabled: true,
  zoomEnabled: true,
  title:{
    text: "Received Signal Strength Indication (RSSI)"
  },
  axisY :{
    includeZero: true,
    title: "RSSI",
    suffix: "dBm",
    minimum : -140,
    maximum : 140
  },
  toolTip: {
    shared: "true"
  },
  legend:{
    cursor:"pointer",
    itemclick : toggleDataSeries
  },
  data: [{
    type: "spline",
    visible: true,
    showInLegend: true,
    yValueFormatString: "##.00 dBm",
    // indexLabelFormatter: function (e){
    //   		return currencyConverter("Â£", "#,##0.##", e.dataPoint.y);
    name: "Node 1",
    dataPoints: [

    ]
  },
  {
    type: "spline",
    showInLegend: true,
    visible: true,
    yValueFormatString: "##.00 dBm",
    name: "Node 2",
    dataPoints: [

    ]
  },
  {
    type: "spline",
    showInLegend: true,
    visible: true,
    yValueFormatString: "##.00 dBm",
    name: "Node 3",
    dataPoints: [

    ]
  },
  {
    type: "spline",
    showInLegend: true,
    visible: true,
    yValueFormatString: "##.00 dBm",
    name: "Node 4",
    dataPoints: [

    ]
  },
  {
    type: "spline",
    showInLegend: true,
    yValueFormatString: "##.00 dBm",
    name: "Node 5",
    dataPoints: [

    ]
  },
  {
    type: "spline",
    showInLegend: true,
    yValueFormatString: "##.00 dBm",
    name: "Node 6",
    dataPoints: [

    ]
  },
  {
    type: "spline",
    showInLegend: true,
    yValueFormatString: "##.00 dBm",
    name: "Node 7",
    dataPoints: [

    ]
  },
  {
    type: "spline",
    showInLegend: true,
    yValueFormatString: "##.00 dBm",
    name: "Node 8",
    dataPoints: [

    ]
  },
  {
    type: "spline",
    showInLegend: true,
    yValueFormatString: "##.00 dBm",
    name: "Node 9",
    dataPoints: [

    ]
  }]
});
var chart2 = new CanvasJS.Chart("chartContainer2", {
  theme:"light2",
  animationEnabled: true,
  zoomEnabled: true,
  title:{
    text: " "
  },
  axisY :{
    includeZero: false,
    title: "RSSI",
    suffix: " dBm"
  },
  toolTip: {
    shared: "true"
  },
  legend:{
    cursor:"pointer",
    itemclick : toggleDataSeries
  },
  data: [{
    type: "spline",
    visible: true,
    showInLegend: true,
    yValueFormatString: "##.00",
    name: "Node 1",
    dataPoints: [

    ]
  }]
});
var chart3 = new CanvasJS.Chart("chartContainer3", {
  theme:"light2",
  animationEnabled: true,
  zoomEnabled: true,
  title:{
    text: " "
  },
  axisY :{
    includeZero: false,
    title: "RSSI",
    suffix: " dBm"
  },
  toolTip: {
    shared: "true"
  },
  legend:{
    cursor:"pointer",
    itemclick : toggleDataSeries
  },
  data: [{
    type: "spline",
    visible: true,
    showInLegend: true,
    yValueFormatString: "##.00 dBm",
    name: "Node 2",
    dataPoints: [

    ]
  }]
});
var chart4 = new CanvasJS.Chart("chartContainer4", {
  theme:"light2",
  animationEnabled: true,
  zoomEnabled: true,
  title:{
    text: " "
  },
  axisY :{
    includeZero: false,
    title: "RSSI",
    suffix: "dBm"
  },
  toolTip: {
    shared: "true"
  },
  legend:{
    cursor:"pointer",
    itemclick : toggleDataSeries
  },
  data: [{
    type: "spline",
    visible: true,
    showInLegend: true,
    yValueFormatString: "##.00",
    name: "Node 3",
    dataPoints: [

    ]
  }]
});
var chart5 = new CanvasJS.Chart("chartContainer5", {
  theme:"light2",
  animationEnabled: true,
  zoomEnabled: true,
  title:{
    text: " "
  },
  axisY :{
    includeZero: false,
    title: "RSSI",
    suffix: " dBm"
  },
  toolTip: {
    shared: "true"
  },
  legend:{
    cursor:"pointer",
    itemclick : toggleDataSeries
  },
  data: [{
    type: "spline",
    visible: true,
    showInLegend: true,
    yValueFormatString: "##.00 dBm",
    name: "Node 4",
    dataPoints: [

    ]
  }]
});
var chart6 = new CanvasJS.Chart("chartContainer6", {
  theme:"light2",
  animationEnabled: true,
  zoomEnabled: true,
  title:{
    text: " "
  },
  axisY :{
    includeZero: false,
    title: "RSSI",
    suffix: " dBm"
  },
  toolTip: {
    shared: "true"
  },
  legend:{
    cursor:"pointer",
    itemclick : toggleDataSeries
  },
  data: [{
    type: "spline",
    visible: true,
    showInLegend: true,
    yValueFormatString: "##.00",
    name: "Node 5",
    dataPoints: [

    ]
  }]
});
var chart7 = new CanvasJS.Chart("chartContainer7", {
  theme:"light2",
  animationEnabled: true,
  zoomEnabled: true,
  title:{
    text: " "
  },
  axisY :{
    includeZero: false,
    title: "RSSI",
    suffix: "dBm"
  },
  toolTip: {
    shared: "true"
  },
  legend:{
    cursor:"pointer",
    itemclick : toggleDataSeries
  },
  data: [{
    type: "spline",
    visible: true,
    showInLegend: true,
    yValueFormatString: "##.00 dBm",
    name: "Node 6",
    dataPoints: [

    ]
  }]
});
var chart8 = new CanvasJS.Chart("chartContainer8", {
  theme:"light2",
  animationEnabled: true,
  zoomEnabled: true,
  title:{
    text: " "
  },
  axisY :{
    includeZero: false,
    title: "RSSI",
    suffix: " dBm"
  },
  toolTip: {
    shared: "true"
  },
  legend:{
    cursor:"pointer",
    itemclick : toggleDataSeries
  },
  data: [{
    type: "spline",
    visible: true,
    showInLegend: true,
    yValueFormatString: "##.00",
    name: "Node 7",
    dataPoints: [

    ]
  }]
});
var chart9 = new CanvasJS.Chart("chartContainer9", {
  theme:"light2",
  animationEnabled: true,
  zoomEnabled: true,
  title:{
    text: " "
  },
  axisY :{
    includeZero: false,
    title: "RSSI",
    suffix: "dBm"
  },
  toolTip: {
    shared: "true"
  },
  legend:{
    cursor:"pointer",
    itemclick : toggleDataSeries
  },
  data: [{
    type: "spline",
    visible: true,
    showInLegend: true,
    yValueFormatString: "##.00 dBm",
    name: "Node 8",
    dataPoints: [

    ]
  }]
});
var chart10 = new CanvasJS.Chart("chartContainer10", {
  theme:"light2",
  animationEnabled: true,
  zoomEnabled: true,
  title:{
    text: " "
  },
  axisY :{
    includeZero: false,
    title: "RSSI",
    suffix: "dBm"
  },
  toolTip: {
    shared: "true"
  },
  legend:{
    cursor:"pointer",
    itemclick : toggleDataSeries
  },
  data: [{
    type: "spline",
    visible: true,
    showInLegend: true,
    yValueFormatString: "##.00",
    name: "Node 9",
    dataPoints: [

    ]
  }]
});
var chart = new CanvasJS.Chart("chartContainer", {
	theme: "light2",
	animationEnabled: true,
  zoomEnabled: true,
	title:{
		text: "RSSI with Node 1"
	},
	legend:{
		cursor: "pointer",
		itemclick: explodePie
	},
	data: [{
		type: "doughnut",
		innerRadius: 90,
		showInLegend: true,
		toolTipContent: "<b>{name}</b>: {y} dBm",
		indexLabel: "{name} : {y} dBm",
		dataPoints: data
	}]
});

chart1.render();
chart2.render();
chart3.render();
chart4.render();
chart5.render();
chart6.render();
chart7.render();
chart8.render();
chart9.render();
chart10.render();
function toggleDataSeries(e) {
  if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible ){
    e.dataSeries.visible = false;
  } else {
    e.dataSeries.visible = true;
  }
  chart1.render();
  chart2.render();
  chart3.render();
  chart4.render();
  chart5.render();
  chart6.render();
  chart7.render();
  chart8.render();
  chart9.render();
  chart10.render();
  }
  function explodePie (e) {
	if(typeof (e.dataSeries.dataPoints[e.dataPointIndex].exploded) === "undefined" || !e.dataSeries.dataPoints[e.dataPointIndex].exploded) {
		e.dataSeries.dataPoints[e.dataPointIndex].exploded = true;
	} else {
		e.dataSeries.dataPoints[e.dataPointIndex].exploded = false;
	}
  e.chart.render();

}
var updateInterval = 1000;
var updateChart = function () {
  if (checkedValue == null) {
    checkedValue = 1;
  }
  else {
    checkedValue = Number(checkedValue);
    data = [
     { y: checkedValue, name: "RSSI" },
     { y: -0, name: "SNR" }
   ];
   checkedValue = null;
  }
	chart.render();
};
updateChart();
setInterval(function () {
  updateChart()
}, updateInterval);
}
</script>
        <script>
          function initMap() {
            var myLatLng = {lat: 10.869767, lng: 106.802595};
            var map = new google.maps.Map(document.getElementById('map'), {
              zoom: 19,
              center: myLatLng
            });
            var marker = new google.maps.Marker({
              position: myLatLng,
              map: map,
              title: 'LoRa Gateway - 10.870111654926301, 106.80377125740053  '
            });
          }
        </script>
        <script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC7avnDDMsdPk_w0564_XU1ahECV2Wy-DQ&callback=initMap">
        </script>
  </body>
</html>
